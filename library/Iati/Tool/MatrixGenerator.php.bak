<?php
class Iati_Tool_MatrixGenerator 
{
    protected $xmlArray;
    protected $folderPath;

    public function setXmlArray($array)
    {
        $this->xmlArray = $array;
    }

    public function getXmlArray()
    {
        return $this->xmlArray;
    }

    public function setFolderPath($path)
    {
        $this->folderPath = $path;
    }

    public function getFolderPath()
    {
        return $this->folderPath;
    }

    public function setMatrix()
    {
        $xmlArray = $this->getXmlArray();
        foreach($xmlArray as $key => $value){
            foreach($value as $k=>$v){
                //                print $k;print "\n";print_r($value);
            }
        }

        //exit();

        //        var_dump($xmlArray);exit();
    }

    public function iati_activity($formattedArray = NULL)
    {
        $functionName = 'iati_activity';
        $validator = array('xml:lang'=>'language',
                           'default-currency'=>'currency',
                           'hierarchy'=>'activity_hierarchy',
                           'last-updated-datetime'=>'datetime',
        );
         
        $statusArray = array();
        if(empty($formattedArray)){
            foreach($validator as $k=>$v){
                $statusArray[$k] = 0;
            }
        }else{
            $csvArray = $this->csvReader($value, 0);
            unset($csvArray[0]);
            //                   var_dump($csvArray);
            //            var_dump(in_array($eachValue, $csvArray));exit();
            foreach($statusArray[$key] as $eachKey => $eachValue){
                //                        print $eachValue;
                //                        print_r($csvArray);
                if(in_array($eachValue, $csvArray)){
                    //                            print $eachValue;
                    $status .= '3';
                }else{
                    //                            print $eachValue;
                    $status .= '1';
                }print $status;
            }
        }
         

    }

    public function reporting_org($object)
    {

        $formattedKeys = array_keys($formattedArray);
        //sorting
        foreach($validator as $key=>$value){
            $status = '';
            if(in_array($key, $statusKeys)){
                if($key == 'ref'){
                    print 'ref';
                }elseif($key == 'text'){
                    print 'text';
                }else{
                    print $value;
                    $csvArray = $this->csvReader($value, 0);
                    unset($csvArray[0]);
                    //                   var_dump($csvArray);
                    //                   var_dump(in_array($eachValue, $csvArray));exit();
                    foreach($statusArray[$key] as $eachKey => $eachValue){
                        //                        print $eachValue;
                        //                        print_r($csvArray);
                        if(in_array($eachValue, $csvArray)){
                            //                            print $eachValue;
                            $status .= '3';
                        }else{
                            //                            print $eachValue;
                            $status .= '1';
                        }print $status;
                    }
                }

                $finalArray[$key] = $statusArray[$key];
            }
            else{
                $finalArray[$key] = 0;
            }
        }
        //                exit();
        //    print_r($newArray);exit();
         
    }

    public function participating_org($object){

    }

    public function recipient_country($object)
    {
    }

    public function recipient_region($object)
    {

    }

    public function collaboration_type($object)
    {
    }

    public function default_flow_type($object)
    {
    }

    public function default_aid_type($object)
    {
    }

    public function default_finance_type($object)
    {
    }

    public function iati_identifier($object)
    {
    }

    public function other_identifier($object)
    {
    }

    public function title($object)
    {

    }

    public function description($object)
    {
    }

    public function sector($object)
    {
    }

    public function activity_date($object)
    {
    }

    public function default_tied_status($object)
    {
    }


    public function policy_marker($object)
    {
    }

    public function transaction($object)
    {

    }

    public function activity_status($object)
    {
    }

    public function contact_info($object)
    {
    }

    public function activity_website($object)
    {

    }

    public function related_activity($object)
    {
    }

    public function document_link($object)
    {

    }

    public function location($object)
    {
        //@todo needs special treatment
    }

    public function legacy_data($object)
    {

    }


    /**
     *  This function reads the csv file specified by "$filename" and returns the array of content in $column
     * @param $filename
     * @param $column
     * @return array
     */
    public function csvReader($filename, $column)
    {
        $this->setFolderPath('/home/manisha/Documents/iati_docs/standard/');// @todo remove this code
        $filePath = $this->getFolderPath().$filename.".csv";
        if(($handle = fopen($filePath, "r")) !== FALSE){
            while(($data = fgetcsv($handle))!== FALSE){
                $columnArray[] = trim($data[$column]);
            }
        }
        fclose($handle);
        return $columnArray;
    }

}